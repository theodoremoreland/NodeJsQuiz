[
  {
    "message": "Which is NOT a key feature of Node.js?",
    "correct_answer_index": 3,
    "choices": [
      "Asynchronous event driven IO helps concurrent request handling",
      "Fast in code execution",
      "Single threaded but highly scalable",
      "Multi-threaded but highly scalable",
      "Node.js library uses JavaScript",
      "No Buffering"
    ],
    "difficulty": "moderate",
    "topics": ["Standard"]
  },
  {
    "message": "What is Event Loop",
    "correct_answer_index": 0,
    "choices": [
      "Event Loop is a single thread that performs all the operations asynchronously.",
      "Event Loop is a single thread that performs all the operations synchronously.",
      "Event Loop is a multi-thread that performs all the operations asynchronously.",
      "Event Loop is a multi-thread that performs all the operations synchronously."
    ],
    "difficulty": "moderate",
    "topics": ["Standard"]
  },
  {
    "message": "What is Event Emitter",
    "correct_answer_index": 1,
    "choices": [
      "Event Emitter is a single thread that performs all the operations asynchronously.",
      "Event Emitter is a single thread that performs all the operations synchronously.",
      "Event Emitter is a multi-thread that performs all the operations asynchronously.",
      "Event Emitter is a multi-thread that performs all the operations synchronously."
    ],
    "difficulty": "moderate",
    "topics": ["Standard"]
  },
  {
    "message": "What is purpose of Buffer class in Node.js",
    "correct_answer_index": 0,
    "choices": [
      "Buffer class is used to handle binary data.",
      "Buffer class is used to handle string data.",
      "Buffer class is used to handle number data.",
      "Buffer class is used to handle boolean data."
    ],
    "difficulty": "moderate",
    "topics": ["Standard"]
  },
  {
    "message": "Which is not true about Node.js?",
    "correct_answer_index": 0,
    "choices": ["Node.js is open source", "Node.js is multithreaded"],
    "difficulty": "moderate",
    "topics": ["Standard"]
  },
  {
    "message": "What is piping in Node.js?",
    "correct_answer_index": 0,
    "choices": [
      "Piping is a mechanism where we provide the output of one stream as the input to another stream.",
      "Piping is a mechanism where we provide the output of one stream as the input to another stream.",
      "Piping is a mechanism where we provide the output of one stream as the input to another stream.",
      "Piping is a mechanism where we provide the output of one stream as the input to another stream."
    ],
    "difficulty": "moderate",
    "topics": ["Standard"]
  },
  {
    "message": "NODE_ENV is used for?",
    "correct_answer_index": 0,
    "choices": [
      "NODE_ENV is an environment variable which is used to specify the environment in which a Node app is executed.",
      "NODE_ENV is an environment variable which is used to specify the environment in which a Node app is executed.",
      "NODE_ENV is an environment variable which is used to specify the environment in which a Node app is executed.",
      "NODE_ENV is an environment variable which is used to specify the environment in which a Node app is executed."
    ],
    "difficulty": "moderate",
    "topics": ["Standard"]
  },
  {
    "message": "What is LTS releases of Node.js why should you care?",
    "correct_answer_index": 0,
    "choices": [
      "LTS stands for Long Term Support. It means that the version of Node.js will be supported for a period of time.",
      "LTS stands for Long Term Support. It means that the version of Node.js will be supported for a period of time.",
      "LTS stands for Long Term Support. It means that the version of Node.js will be supported for a period of time.",
      "LTS stands for Long Term Support. It means that the version of Node.js will be supported for a period of time."
    ],
    "difficulty": "moderate",
    "topics": ["Standard"]
  },
  {
    "message": "What is the difference between process.nextTick() and setImmediate()?",
    "correct_answer_index": 0,
    "choices": [
      "process.nextTick() fires immediately on the same phase, setImmediate() fires on the following iteration or 'tick' of the event loop.",
      "process.nextTick() fires immediately on the same phase, setImmediate() fires on the following iteration or 'tick' of the event loop.",
      "process.nextTick() fires immediately on the same phase, setImmediate() fires on the following iteration or 'tick' of the event loop.",
      "process.nextTick() fires immediately on the same phase, setImmediate() fires on the following iteration or 'tick' of the event loop."
    ],
    "difficulty": "moderate",
    "topics": ["Standard"]
  },
  {
    "message": "How many threads does Node.js actually create?",
    "correct_answer_index": 0,
    "choices": ["1", "4", "3"],
    "difficulty": "moderate",
    "topics": ["Standard"]
  },
  {
    "message": "The V8 engine...",
    "correct_answer_index": 0,
    "choices": [
      "V8 is a JavaScript engine built at the google development center, in Germany. It is open source and written in C++. It is used for both client side (Google Chrome) and server side (Node.js) JavaScript applications. V8 was first designed to increase the performance of the JavaScript execution inside web browsers. In order to obtain speed, V8 translates JavaScript code into more efficient machine code instead of using an interpreter. It compiles JavaScript code into machine code at execution by implementing a JIT (Just-In-Time) compiler like a lot of modern JavaScript engines such as SpiderMonkey or Rhino (Mozilla) are doing. The main difference with V8 is that it doesn't produce bytecode or any intermediate code."
    ],
    "difficulty": "moderate",
    "topics": ["Standard"]
  },
  {
    "message": "How does Node.js handle concurrency?",
    "correct_answer_index": 0,
    "choices": [
      "Node.js is a single-threaded application, but it can support concurrency via the concept of event and callbacks. Every API of Node.js is asynchronous and being single-threaded, they use async function calls to maintain concurrency. Node.js uses observer pattern. Node.js thread keeps an event loop and whenever a task gets completed, it fires the corresponding event which signals the event-listener function to execute."
    ],
    "difficulty": "moderate",
    "topics": ["Standard"]
  },
  {
    "message": "What is Node.js?",
    "correct_answer_index": 1,
    "choices": [
      "Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine.",
      "Node.js is an open-source, cross-platform JavaScript run-time environment that executes JavaScript code outside of a browser.",
      "Node.js is a JavaScript-based open-source front-end web application framework mainly maintained by Facebook and a community of individual developers and companies.",
      "Node.js is a tool for automating web browsers."
    ],
    "difficulty": "moderate",
    "topics": ["Standard"]
  },
  {
    "message": "What is npm?",
    "correct_answer_index": 0,
    "choices": [
      "npm is the package manager for JavaScript and the world's largest software registry. Discover packages of reusable code â€” and assemble them in powerful new ways.",
      "npm is a tool for automating web browsers.",
      "npm is a JavaScript-based open-source front-end web application framework mainly maintained by Facebook and a community of individual developers and companies.",
      "npm is a JavaScript runtime built on Chrome's V8 JavaScript engine."
    ],
    "difficulty": "moderate",
    "topics": ["Packages"]
  },
  {
    "message": "What's the difference between dependencies, devDependencies and peerDependencies in npm package.json file?",
    "correct_answer_index": 0,
    "choices": [
      "Dependencies are the packages that are required for your project in production.",
      "Dependencies are the packages that are required for your project in production.",
      "Dependencies are the packages that are required for your project in production.",
      "Dependencies are the packages that are required for your project in production."
    ],
    "difficulty": "moderate",
    "topics": ["Packages"]
  },
  {
    "message": "What is the difference between a package.json file and a package-lock.json file?",
    "correct_answer_index": 0,
    "choices": [
      "package-lock.json is automatically generated for any operations where npm modifies either the node_modules tree, or package.json. It describes the exact tree that was generated, such that subsequent installs are able to generate identical trees, regardless of intermediate dependency updates.",
      "package-lock.json is automatically generated for any operations where npm modifies either the node_modules tree, or package.json. It describes the exact tree that was generated, such that subsequent installs are able to generate identical trees, regardless of intermediate dependency updates.",
      "package-lock.json is automatically generated for any operations where npm modifies either the node_modules tree, or package.json. It describes the exact tree that was generated, such that subsequent installs are able to generate identical trees, regardless of intermediate dependency updates.",
      "package-lock.json is automatically generated for any operations where npm modifies either the node_modules tree, or package.json. It describes the exact tree that was generated, such that subsequent installs are able to generate identical trees, regardless of intermediate dependency updates."
    ],
    "difficulty": "moderate",
    "topics": ["Packages"]
  },
  {
    "message": "When would you use the npm ci command?",
    "correct_answer_index": 0,
    "choices": [
      "npm ci is a command that helps you run npm install faster and more reliably in continuous integration environments.",
      "npm ci is a command that helps you run npm install faster and more reliably in continuous integration environments.",
      "npm ci is a command that helps you run npm install faster and more reliably in continuous integration environments.",
      "npm ci is a command that helps you run npm install faster and more reliably in continuous integration environments."
    ],
    "difficulty": "moderate",
    "topics": ["Packages"]
  },
  {
    "message": "Which one is not a valid Node.js package manager?",
    "correct_answer_index": 0,
    "choices": ["npm", "yarn", "bower", "pnpm"],
    "difficulty": "moderate",
    "topics": ["Packages"]
  },
  {
    "message": "What is the purpose of the eject operation in create-react-app?",
    "correct_answer_index": 0,
    "choices": [
      "If you aren't satisfied with the build tool and configuration choices, you can eject at any time. This command will remove the single build dependency from your project.",
      "If you aren't satisfied with the build tool and configuration choices, you can eject at any time. This command will remove the single build dependency from your project.",
      "If you aren't satisfied with the build tool and configuration choices, you can eject at any time. This command will remove the single build dependency from your project.",
      "If you aren't satisfied with the build tool and configuration choices, you can eject at any time. This command will remove the single build dependency from your project."
    ],
    "difficulty": "moderate",
    "topics": ["Packages"]
  },
  {
    "message": "What is global installation of dependencies",
    "correct_answer_index": 1,
    "choices": [
      "Global installation of dependencies is when you install a package globally so that all the projects can use it.",
      "Global installation of dependencies is when you install a package globally so that you can run it as a command line tool.",
      "Global installation of dependencies is when you install a package globally so that you can use it in your code.",
      "Global installation of dependencies is when you install a package globally so that you can use it in your code."
    ],
    "difficulty": "moderate",
    "topics": ["Packages"]
  },

  {
    "message": "Why should you separate Express 'app' and 'server'? ",
    "correct_answer_index": 0,
    "choices": [
      "Separation of concerns. You can test 'app' logic without actually listening on a port.",
      "Separation of concerns. You can test 'app' logic without actually listening on a port.",
      "Separation of concerns. You can test 'app' logic without actually listening on a port.",
      "Separation of concerns. You can test 'app' logic without actually listening on a port."
    ],
    "difficulty": "moderate",
    "topics": ["Express.js", "Web Development"]
  },
  {
    "message": "Which is the key benefit of SSR?",
    "correct_answer_index": 2,
    "choices": [
      "SSR is faster than CSR",
      "SSR is slower than CSR",
      "SSR is better for SEO",
      "SSR is better for security"
    ],
    "difficulty": "moderate",
    "topics": ["Standard", "Web Development"]
  }
]
